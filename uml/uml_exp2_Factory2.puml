@startuml
abstract class AbstractProperty{
+ AbstractProperty(int locationX, int locationY)
+ {abstract} getProperty(HeroAircraft heroAircraft):void
+ forward():void
}
class BulletProperty {
+ BulletProperty(int locationX, int locationY)
+ getProperty(HeroAircraft heroAircraft):void
}
class BloodProperty {
- BLOOD_UP:int
+ BloodProperty(int locationX, int locationY)
+ getProperty(HeroAircraft heroAircraft):void
}
class BombProperty {
+ BombProperty(int locationX, int locationY)
+ getProperty(HeroAircraft heroAircraft):void
}

Interface PropertyFactory{
+ {abstract} createProperty(int locationX, int locationY):AbstractProperty
}
class BloodPropertyFactory{
+ createProperty(int locationX, int locationY):AbstractProperty
}
class BombPropertyFactory{
+ createProperty(int locationX, int locationY):AbstractProperty
}
class BulletPropertyFactory{
+ createProperty(int locationX, int locationY):AbstractProperty
}
PropertyFactory <|.. BloodPropertyFactory
PropertyFactory <|.. BombPropertyFactory
PropertyFactory <|.. BulletPropertyFactory

AbstractProperty <|-- BloodProperty
AbstractProperty <|-- BombProperty
AbstractProperty <|-- BulletProperty

BloodProperty <..  BloodPropertyFactory
BombProperty <..   BombPropertyFactory
BulletProperty <.. BulletPropertyFactory

PropertyFactory ..> AbstractProperty


@enduml